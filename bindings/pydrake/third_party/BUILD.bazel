# -*- python -*-

load(
    "@drake//tools/skylark:drake_py.bzl",
    "drake_py_library",
)
load(
    "@drake//tools/skylark:pybind.bzl",
    "get_pybind_package_info",
)
load("@drake//tools/workspace:forward_files.bzl", "forward_files")
load("//bindings/pydrake:pydrake.bzl", "add_lint_tests_pydrake")

package(default_visibility = [
    "//bindings/pydrake:__subpackages__",
])

# This determines how `PYTHONPATH` is configured, and how to install the
# bindings.
PACKAGE_INFO = get_pybind_package_info(
    base_package = "//bindings",
)

drake_py_library(
    name = "module_py",
    srcs = ["__init__.py"],
    deprecation = " ".join([
        "//bindings/pydrake/third_party:module_py is deprecated and will be",
        "removed on 2020-02-01.",
    ]),
    imports = PACKAGE_INFO.py_imports,
    tags = ["manual"],
)

# Forward physical files to simplify working with `third_party` files (both
# for Python imports and for installation).
wrapt_prefix = "//third_party:com_github_grahamdumpleton_wrapt/"

forward_files(
    srcs = [wrapt_prefix + f for f in [
        "__init__.py",
        "LICENSE",
        "wrappers.py",
    ]],
    dest_prefix = "wrapt/",
    strip_prefix = wrapt_prefix,
    tags = ["nolint"],
    visibility = ["//visibility:private"],
)

drake_py_library(
    name = "wrapt_py",
    srcs = [
        "wrapt/__init__.py",
        "wrapt/wrappers.py",
    ],
    deprecation = " ".join([
        "//bindings/pydrake/third_party:wrapt_py is deprecated and will be",
        "removed on 2020-02-01. Please use the system wrapt instead.",
    ]),
    imports = PACKAGE_INFO.py_imports,
    tags = [
        "manual",
        "nolint",
    ],
)

PY_LIBRARIES = [
    ":module_py",
    ":wrapt_py",
]

drake_py_library(
    name = "third_party",
    deprecation = " ".join([
        "//bindings/pydrake/third_party is deprecated and will be",
        "removed on 2020-02-01.",
    ]),
    tags = ["manual"],
    visibility = ["//visibility:public"],
    deps = PY_LIBRARIES,
)

add_lint_tests_pydrake()
