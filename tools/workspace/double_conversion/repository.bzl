# -*- python -*-

load("@drake//tools/workspace:os.bzl", "determine_os")

def _impl(repository_ctx):
    os_result = determine_os(repository_ctx)

    if os_result.error != None:
        fail(os_result.error)

    linkopts = ["-ldouble-conversion"]

    if os_result.is_macos:
        prefix = "/usr/local/opt/double-conversion"
        linkopts += [
            "-L{}/lib".format(prefix),
            "-Wl,-rpath,{}/lib".format(prefix)
        ]
    elif os_result.is_ubuntu:
        prefix = "/usr"
    else:
        fail("Operating system is NOT supported", attr = os_result)

    repository_ctx.symlink(
        "{}/include/double-conversion".format(prefix)
        "include/double-conversion",
    )

    file_content = """# -*- python -*-

# DO NOT EDIT: generated by double_conversion_repository()

licenses(["notice"])  # BSD-3-Clause

cc_library(
    name = "double_conversion",
    hdrs = glob(["include/double-conversion/*.h"]),
    includes = ["include"],
    linkopts = {},
    visibility = ["//visibility:public"],
)
""".format(linkopts)

    repository_ctx.file(
            "BUILD.bazel",
            content = file_content,
            executable = False,
    )



double_conversion_repository = repository_rule(
    local = True,
    configure = True,
    implementation = _impl,
)
